% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise_comparisons.R
\name{pairwise_test_cont}
\alias{pairwise_test_cont}
\title{Pairwise Testing for a Continuous Variable}
\usage{
pairwise_test_cont(
  x,
  group,
  paired = FALSE,
  id = NULL,
  method = c("wilcox", "t.test"),
  alternative = c("two.sided", "less", "greater"),
  sorted_group = NULL,
  num_needed_for_test = 3,
  digits = 0,
  trailing_zeros = TRUE,
  sep_val = " vs. ",
  na_str_out = "---",
  verbose = FALSE
)
}
\arguments{
\item{x}{numeric vector (can include NA values).}

\item{group}{categorical vector of group values.}

\item{paired}{a logical variable indicating whether to do a paired test.}

\item{id}{vector which contains the id information (so \code{x} values can be linked between groups). Only used and must be present when paired = TRUE.}

\item{method}{what test to run ("wilcox" or "t.test").}

\item{alternative}{character string specifying the alternative hypothesis, must be one of "two.sided" (default), "greater" or "less". You can specify just the initial letter.}

\item{sorted_group}{a vector listing the group testing order from lowest to highest.}

\item{num_needed_for_test}{required sample size (per group) to perform test. Note at least 2 distinct values per group are always needed for testing.}

\item{digits}{digits to round for magnitude descriptive statistics (default = 0).}

\item{trailing_zeros}{logical indicating if trailing zeros should be included in the descriptive statistics (i.e. 0.100 instead of 0.1). Note if set to TRUE, output is a character vector.}

\item{sep_val}{value to be pasted between the two measures. Default is ' vs. '.}

\item{na_str_out}{the character string in the output table that replaces missing values.}

\item{verbose}{a logical variable indicating if warnings and messages should be displayed.}
}
\value{
Returns a data frame with all possible pairwise comparisons. Variables include Comparison, SampleSizes, Median_Min_Max (group stats; median [min, max]), Mean_SD (group stats; mean (sd)), MagnitudeTest (wilcox/t-test p-value), PerfectSeparation (a logical flag indicating if there is perfect seperation).
}
\description{
Takes a continuous variable and performs pairwise testing (t-test or wilcox test)
}
\details{
Runs \code{wilcox_test()} in the coin package, with "exact" distribution.

If \code{sorted_group} is not specified then testing order based on factor levels if \code{group} is a factor, and alphabetical order otherwise

\code{trailing_zeros} does not impact p-value column, which will be a numeric column regardless.

If \code{paired = TRUE} the descriptive statistics are shown for observations that have non-missing values for both groups.
}
\examples{

x_example <- c(NA, sample(1:50, 50), sample(51:99, 49), 1111,2222)
group_example <- c(rep(1:4,25),'a','a')

pairwise_test_cont(x_example,group_example, num_needed_for_test = 2)

pairwise_test_cont(
x_example,group_example, alternative = "less",
  sorted_group = c(1:4, 'a'),num_needed_for_test = 2)



# Examples with Real World Data
library(dplyr)

# BAMA Assay Data Example
data(exampleData_BAMA)

## Group Comparison
group_testing_tibble <- exampleData_BAMA \%>\%
   group_by(antigen, visitno) \%>\%
   summarise(pairwise_test_cont(x = magnitude,
                                group = group,
                                paired = FALSE,
                                method = 'wilcox',
                                alternative = "less",
                                sorted_group = c(1,2),
                                digits = 3,
                                num_needed_for_test = 3,
                                verbose = TRUE),
            .groups = "keep")


## Timepoint Comparison
timepoint_testing_dt <- exampleData_BAMA \%>\%
                       group_by(antigen, group) \%>\%
                       summarise(pairwise_test_cont(x = magnitude,
                                                   group = visitno,
                                                   paired = TRUE,
                                                   id = pubID,
                                                   method = 'wilcox',
                                                   sorted_group = c(0,1,2),
                                                   alternative = 'less',
                                                   num_needed_for_test = 3,
                                                   digits = 3,
                                                   trailing_zeros = TRUE,
                                                   sep_val = ' vs. ',
                                                   verbose = TRUE),
                                 .groups = "keep")


# ICS Assay Data Example
data(exampleData_ICS)

## Group Comparison
# using dplyr
exampleData_ICS \%>\%
group_by(Stim, Parent, Population, Visit) \%>\%
summarise(pairwise_test_cont(x = PercentCellNet,
                            group = Group,
                            paired = FALSE,
                            method = 'wilcox',
                            alternative = 'less',
                            sorted_group = c(1,2,3,4),
                            num_needed_for_test = 3,
                            digits = 4,
                            trailing_zeros = TRUE,
                            sep_val = ' vs. ',
                            verbose = TRUE),
         .groups = "keep")

# Timepoint Comparison
timepoint_testing_dt <- exampleData_ICS \%>\%
                       group_by(Stim, Parent, Population, Group) \%>\%
                       summarise(pairwise_test_cont(x = PercentCellNet,
                                                    group = Visit,
                                                    paired = TRUE,
                                                    id = pubID,
                                                    method = 'wilcox',
                                                    sorted_group = c(0,1,2),
                                                    alternative = 'less',
                                                    num_needed_for_test = 3,
                                                    digits = 4,
                                                    trailing_zeros = TRUE,
                                                    sep_val = ' vs. ',
                                                    verbose = TRUE),
                       .groups = "keep")


}
