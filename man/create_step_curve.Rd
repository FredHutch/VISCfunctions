% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_curves.R
\name{create_step_curve}
\alias{create_step_curve}
\title{Create a data.frame to plot step lines}
\usage{
create_step_curve(x, event = NULL)
}
\arguments{
\item{x}{Time values used to create the x-axis in step curves (numeric vector)}

\item{event}{event status, 0=censor and 1=event (numeric vector).
If NULL assumes no censoring}
}
\value{
Returns a data frame with time, \code{surv}, \code{n.risk},
\code{n.event}, and \code{n.censor} (\code{survival::summary.survfit}
output format)
}
\description{
Creates survival probabilities from time and censoring information and
generates a risk table that includes the survival probabilities and number
at risk in addition to the data provided. This data.frame can be used to
plot step line outcomes such as time-to-event (Kaplan-Meier curves) and
magnitude breadth (MB) curves.
}
\details{
The output of survival probabilities can be used for plotting step function
curves, with \code{time} on the x axis, \code{surv} on the y axis, and
\code{n.censor == 1} subset can be used for a \code{ggplot2::geom_point()}
layer.
}
\examples{

create_step_curve(x = 1:10)
create_step_curve(x = 1:10, event = rep(0:1, 5))

library(dplyr)
dat = data.frame(x = c(1:10),
                 event = c(1,1,0,1,1,0,0,1,1,1),
                 ptid = c(1,1,2,2,3,3,3,3,3,3))
plot_data <-
 dat \%>\%
  dplyr::group_by(ptid) \%>\%
  dplyr::group_modify(~ create_step_curve(x = .x$x, event = .x$event))

ggplot2::ggplot(data = plot_data,
                ggplot2::aes(x = time, y = surv, color = factor(ptid))) +
 ggplot2::geom_step(linetype = "dashed", direction = 'hv', lwd = .35) +
 ggplot2::geom_point(data = plot_data \%>\% filter(n.censor == 1),
                     shape = 3, size = 6, show.legend = FALSE)

}
