% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise_comparisons.R
\name{pairwise_test_bin}
\alias{pairwise_test_bin}
\title{Binary Variable Pairwise Testing}
\usage{
pairwise_test_bin(
  x,
  group,
  id = NULL,
  method = c("barnard", "fisher", "chi.sq", "mcnemar"),
  barnard_method = c("z-pooled", "z-unpooled", "boschloo", "santner and snell", "csm",
    "csm approximate", "csm modified"),
  alternative = c("two.sided", "less", "greater"),
  sorted_group = NULL,
  num_needed_for_test = 3,
  conf_level = 0.95,
  digits = 1,
  trailing_zeros = TRUE,
  sep_val = " vs. ",
  na_str_out = "---",
  latex_output = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{numeric vector (0/1) or logical vector or (F/T)
(can include NA values)}

\item{group}{vector of group values.}

\item{id}{vector which contains the id information
(so \code{x} values can be linked between groups).
Only used and must be present when \code{method = 'mcnemar'}.}

\item{method}{what test to run, "barnard" (default), "fisher" ,"chi.sq" ,
or "mcnemar")}

\item{barnard_method}{indicates the Barnard method for finding tables as
or more extreme than the observed table: must be either "Z-pooled",
"Z-unpooled", "Santner and Snell", "Boschloo", "CSM", "CSM approximate",
or "CSM modified". Only used when \code{method = 'barnard'}}

\item{alternative}{a character string specifying the alternative hypothesis,
must be one of "two.sided" (default), "greater" or "less". You can specify
just the initial letter. Only "two.sided" available for
\verb{method = 'chi.sq' or 'mcnemar'}}

\item{sorted_group}{a vector listing the group testing order from lowest to
highest, if performing one sided tests}

\item{num_needed_for_test}{required sample size (per group) to perform test.}

\item{conf_level}{The level of confidence to be used in the confidence
interval.}

\item{digits}{digits to round for descriptive statistics}

\item{trailing_zeros}{logical indicating if trailing zeros should be included
in the descriptive statistics (i.e. 0.100 instead of 0.1). Note if set to
TRUE, output is a character vector.}

\item{sep_val}{value to be pasted between the two measures. Default is
' vs. '.}

\item{na_str_out}{the character string in the output table that replaces
missing values.}

\item{latex_output}{will this table be used for latex output (default is FALSE)}

\item{verbose}{a logical variable indicating if warnings and messages should
be displayed}

\item{...}{other parameters to pass to Exact::exact.test when running
Barnard test}
}
\value{
Returns a data frame with all possible pairwise comparisons.
Variables include Comparison, ResponseStats (group stats; number positive /
number = rate (Wilson CI Bounds)), ResponseTest (fisher/chisq p value),
PerfectSeperation (a logical flag indicating if one group if 0\% and the
other 100\%)
}
\description{
Takes a binary variable (e.g., response status) and performs pairwise testing.
Performs either Barnard, Fisher's, or Chi-sq test for unpaired data and
McNemar's test for paired data.
}
\details{
If all values of \code{x} are NA, the function will return NULL. This is to allow for nice
return when looping through function with dplyr \code{group_by} and \code{group_modify}

For one sided tests if \code{sorted_group = NULL} than the factor level order of \code{group}
is respected, otherwise the levels will set to alphabetical order (i.e. if
\code{alternative = less} then testing a < b ).

If planning on using the table in a latex document then set \code{latex_output = TRUE}.
This will set the \verb{\%} symbol to \verb{\\\\\%} in the binary percentages
}
\examples{

set.seed(1)
x_example = c(NA,sample(0:1,50,replace = TRUE, prob = c(.75,.25)),
  sample(0:1,50,replace = TRUE, prob = c(.25,.75)),0,0,1,1)
group_example = c(rep(1,25),NA,rep(2,25),rep(3,25),rep(4,25),'a','a','b','b')

pairwise_test_bin(x_example,group_example, num_needed_for_test = 2)

pairwise_test_bin(
x_example,group_example, alternative = "less",
  sorted_group = c(1:4, 'a','b'),num_needed_for_test = 2)

# Examples with Real World Data
library(dplyr)

# BAMA Assay Data Example
data(exampleData_BAMA)

## Group Comparison
group_testing <- exampleData_BAMA \%>\%
   group_by(antigen, visitno) \%>\%
   group_modify(~ as.data.frame(
       pairwise_test_bin(x = .$response, group = .$group,
               method = 'barnard', alternative = 'less',
               num_needed_for_test = 3, digits = 1,
               trailing_zeros = TRUE, sep_val = ' vs. ', verbose = TRUE)))


## Timepoint Comparison
timepoint_testing <- exampleData_BAMA \%>\%
   group_by(antigen, group) \%>\%
   group_modify(~ as.data.frame(
       pairwise_test_bin(x = .$response, group = .$visitno, id = .$pubID,
               method = 'mcnemar', num_needed_for_test = 3, digits = 1,
               trailing_zeros = TRUE, sep_val = ' vs. ', verbose = TRUE)))

# ICS Assay Data Example
data(exampleData_ICS)

## Group Comparison
group_testing <- exampleData_ICS \%>\%
   group_by(Stim, Parent, Population, Visit) \%>\%
   group_modify(~ as.data.frame(
       pairwise_test_bin(x = .$response, group = .$Group , alternative = 'greater',
               method = 'barnard', num_needed_for_test = 3, digits = 1,
               trailing_zeros = TRUE, sep_val = ' vs. ', verbose = TRUE)))

## Timepoint Comparison
timepoint_testing <- exampleData_ICS \%>\%
   group_by(Stim, Parent, Population, Group) \%>\%
   group_modify(~ as.data.frame(
       pairwise_test_bin(x = .$response, group = .$Visit, id = .$pubID,
               method = 'mcnemar', num_needed_for_test = 3, digits = 1,
               trailing_zeros = TRUE, sep_val = ' vs. ', verbose = TRUE)))

}
